{
    "version": "1.17",
    "alias": "tools",
    "color": "#c39113",
    "mute": false,
    "solo": false,
    "references": [
        "$NXT_BUILTINS/WidgetNodes.nxt"
    ],
    "meta_data": {
        "positions": {
            "/button": [
                -1160.1899959037398,
                -733.186860840478
            ],
            "/checkbox": [
                -1160.1899959037398,
                -673.186860840478
            ],
            "/constrain": [
                -932.7891977788381,
                -1221.0551092259636
            ],
            "/create_control": [
                -932.7891977788381,
                -1221.0551092259636
            ],
            "/dropDownMenu": [
                -1160.1899959037398,
                -613.186860840478
            ],
            "/grid": [
                -932.7891977788381,
                -1221.0551092259636
            ],
            "/grid2": [
                280,
                20
            ],
            "/gridLayout": [
                -1160.1899959037398,
                -793.186860840478
            ],
            "/itemSelector": [
                -1160.1899959037398,
                -493.18686084047795
            ],
            "/main_window": [
                -728.5749456282554,
                -976.3751451587958
            ],
            "/menuItem": [
                -1160.1899959037398,
                -553.186860840478
            ],
            "/node": [
                -932.7891977788381,
                -1221.0551092259636
            ],
            "/panel": [
                -1160.1899959037398,
                -853.186860840478
            ],
            "/rotation_order": [
                280,
                20
            ],
            "/set_rotation_order": [
                280,
                20
            ],
            "/tab": [
                -1160.1899959037398,
                -913.186860840478
            ],
            "/texture_to_face_color": [
                -702.3084207374891,
                -1741.544218151311
            ],
            "/window": [
                -1160.1899959037398,
                -973.186860840478
            ],
            "/write_controls_file": [
                -702.3084207374891,
                -1741.544218151311
            ]
        },
        "colors": {
            "$NXT_BUILTINS/WidgetNodes.nxt": "#0d7358"
        },
        "collapse": {}
    },
    "nodes": {
        "/main_window": {
            "instance": "/window",
            "child_order": [
                "manual_tab"
            ],
            "attrs": {
                "_widget_window": {
                    "value": "True"
                },
                "background_color": {
                    "type": "raw"
                }
            }
        },
        "/main_window/manual_tab": {
            "instance": "/tab",
            "child_order": [
                "selection_panel",
                "main_panel",
                "curve",
                "Skinning",
                "Geometry"
            ],
            "attrs": {
                "text": {
                    "value": "Manual Tools"
                }
            }
        },
        "/main_window/manual_tab/Geometry": {
            "instance": "/panel",
            "child_order": [
                "texture_to_face_color"
            ],
            "attrs": {
                "text": {
                    "value": "Geometry"
                }
            }
        },
        "/main_window/manual_tab/Geometry/texture_to_face_color": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "type": "raw",
                    "value": "Bake Face Color of Selected"
                }
            },
            "code": [
                "selection = cmds.ls(selection=True)",
                "for object in selection:",
                "    impulse.utils.color.face_color_from_texture(object, anti_alias=True)"
            ]
        },
        "/main_window/manual_tab/Skinning": {
            "instance": "/panel",
            "child_order": [
                "grid"
            ],
            "attrs": {
                "text": {
                    "value": "Skinning"
                }
            }
        },
        "/main_window/manual_tab/Skinning/grid": {
            "instance": "/gridLayout",
            "child_order": [
                "save_selected_weights",
                "save_all_weights"
            ]
        },
        "/main_window/manual_tab/Skinning/grid/save_all_weights": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "type": "raw",
                    "value": "Write All Weights"
                }
            },
            "code": [
                "selection = cmds.listRelatives(\"${geo_group}\", allDescendents=True)",
                "",
                "for object in selection:",
                "    if object.endswith(\"_GEO\"):",
                "        name = f\"{object.rsplit('_', 1)[0]}\".lower()",
                "        impulse.utils.skin.write_ng_skin_weights(filepath=f\"${asset_root}/{name}_weights.json\", geometry=object)"
            ]
        },
        "/main_window/manual_tab/Skinning/grid/save_selected_weights": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "type": "raw",
                    "value": "Wrrite Weights of Selected"
                }
            },
            "code": [
                "selection = cmds.ls(selection=True)",
                "",
                "for object in selection:",
                "    name = f\"{object.rsplit('_', 1)[0]}\".lower()",
                "    impulse.utils.skin.write_ng_skin_weights(filepath=f\"${asset_root}/{name}_weights.json\", geometry=object)"
            ]
        },
        "/main_window/manual_tab/curve": {
            "instance": "/panel",
            "child_order": [
                "grid",
                "create_control"
            ],
            "attrs": {
                "text": {
                    "type": "raw",
                    "value": "Control"
                }
            }
        },
        "/main_window/manual_tab/curve/create_control": {
            "instance": "/button",
            "attrs": {
                "control_shape": {
                    "type": "raw",
                    "value": "${../grid/control_selector.menu_value}"
                },
                "control_size": {
                    "type": "raw",
                    "value": "${../grid/size_selector.menu_value}"
                },
                "text": {
                    "type": "raw",
                    "value": "Create Control(s)"
                }
            },
            "code": [
                "selection = cmds.ls(selection=True)",
                "for object in selection:",
                "    impulse.utils.control.make_control(",
                "            name=object.split('|')[-1], ",
                "            target_transform=object, ",
                "            size=${control_size}, ",
                "            control_shape=\"${control_shape}\",",
                "            offset=0,",
                "            )"
            ]
        },
        "/main_window/manual_tab/curve/grid": {
            "instance": "/gridLayout",
            "child_order": [
                "mirror_controls",
                "write_controls_file",
                "combine_curve",
                "write_curve",
                "size_selector",
                "control_selector"
            ]
        },
        "/main_window/manual_tab/curve/grid/combine_curve": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "type": "raw",
                    "value": "Combine Curves"
                }
            },
            "code": [
                "impulse.utils.control.combine_curves()",
                ""
            ]
        },
        "/main_window/manual_tab/curve/grid/control_selector": {
            "instance": "/dropDownMenu",
            "attrs": {
                "menu_items": {
                    "type": "raw",
                    "value": "Circle Square Sphere Cube Locator Triangle"
                },
                "menu_value": {
                    "type": "raw",
                    "value": "Circle"
                },
                "text": {
                    "type": "raw",
                    "value": "Control Shape"
                }
            }
        },
        "/main_window/manual_tab/curve/grid/mirror_controls": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "value": "Mirror Controls"
                }
            },
            "code": [
                "impulse.utils.control.mirror_control_shapes()"
            ]
        },
        "/main_window/manual_tab/curve/grid/size_selector": {
            "instance": "/dropDownMenu",
            "attrs": {
                "menu_items": {
                    "type": "raw",
                    "value": "0.1 0.2 0.5 1 5"
                },
                "menu_value": {
                    "type": "float",
                    "value": "0.2"
                },
                "text": {
                    "type": "raw",
                    "value": "Control Shape"
                }
            }
        },
        "/main_window/manual_tab/curve/grid/write_controls_file": {
            "instance": "/button",
            "attrs": {
                "filepath": {
                    "type": "raw",
                    "value": "${asset_root}/controls.json"
                },
                "text": {
                    "value": "Write Controls File"
                }
            },
            "code": [
                "impulse.utils.control.write_control_shapes(filepath=\"${filepath}\")"
            ]
        },
        "/main_window/manual_tab/curve/grid/write_curve": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "value": "Write Curve"
                }
            },
            "code": [
                "impulse.utils.control.write_curve()",
                ""
            ]
        },
        "/main_window/manual_tab/main_panel": {
            "instance": "/panel",
            "child_order": [
                "grid",
                "grid2"
            ],
            "attrs": {
                "text": {
                    "value": "Transform"
                }
            }
        },
        "/main_window/manual_tab/main_panel/grid": {
            "instance": "/gridLayout",
            "child_order": [
                "constrain",
                "mirror",
                "orient_world",
                "match_transform"
            ]
        },
        "/main_window/manual_tab/main_panel/grid/constrain": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "value": "Matrix Constrain"
                }
            },
            "code": [
                "selection = cmds.ls(selection=True)",
                "impulse.utils.transform.matrix_constraint(selection[0], selection[1])",
                ""
            ]
        },
        "/main_window/manual_tab/main_panel/grid/match_transform": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "type": "raw",
                    "value": "Match Transform"
                }
            },
            "code": [
                "selected = cmds.ls(selection=True)",
                "impulse.utils.transform.match_transform(selected[0], selected[1])"
            ]
        },
        "/main_window/manual_tab/main_panel/grid/mirror": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "type": "raw",
                    "value": "Mirror"
                }
            },
            "code": [
                "selected = cmds.ls(selection=True)",
                "for object in selected:",
                "    impulse.utils.transform.mirror_transform(transform=object)"
            ]
        },
        "/main_window/manual_tab/main_panel/grid/orient_world": {
            "instance": "/button",
            "attrs": {
                "text": {
                    "value": "Orient To World"
                }
            },
            "code": [
                "selected = cmds.ls(selection=True)",
                "for object in selected:",
                "    impulse.utils.transform.orient_to_world(transform=object)"
            ]
        },
        "/main_window/manual_tab/main_panel/grid2": {
            "instance": "/gridLayout",
            "child_order": [
                "rotation_order",
                "set_rotation_order"
            ]
        },
        "/main_window/manual_tab/main_panel/grid2/rotation_order": {
            "instance": "/dropDownMenu",
            "attrs": {
                "menu_items": {
                    "type": "raw",
                    "value": "XYZ  YZX ZXY XZY YXZ ZYX"
                },
                "menu_value": {
                    "type": "raw",
                    "value": "YXZ"
                },
                "text": {
                    "value": "Rotation Order"
                }
            }
        },
        "/main_window/manual_tab/main_panel/grid2/set_rotation_order": {
            "instance": "/button",
            "attrs": {
                "rotation_order": {
                    "type": "raw",
                    "value": "${../rotation_order.menu_value}"
                },
                "text": {
                    "value": "Apply Rotation Order"
                }
            },
            "code": [
                "rotation_order_dict =  {",
                "    \"XYZ\": 0,",
                "    \"YZX\": 1,",
                "    \"ZXY\": 2,",
                "    \"XZY\": 3,",
                "    \"YXZ\": 4,",
                "    \"ZYX\": 5,",
                "}",
                "",
                "selection = cmds.ls(selection=True)",
                "",
                "for object in selection:",
                "    cmds.setAttr(f\"{object}.rotateOrder\", rotation_order_dict[\"${rotation_order}\"])"
            ]
        },
        "/main_window/manual_tab/selection_panel": {
            "instance": "/panel",
            "child_order": [
                "grid"
            ],
            "attrs": {
                "text": {
                    "value": "Selection"
                }
            }
        },
        "/main_window/manual_tab/selection_panel/grid": {
            "instance": "/gridLayout",
            "child_order": [
                "selection1",
                "selection2",
                "selection3"
            ],
            "attrs": {
                "max_columns": {
                    "value": "3"
                }
            }
        },
        "/main_window/manual_tab/selection_panel/grid/selection1": {
            "instance": "/button",
            "attrs": {
                "selection_num": {
                    "type": "int",
                    "value": "1"
                },
                "text": {
                    "type": "raw",
                    "value": "Selection ${selection_num}"
                }
            },
            "code": [
                "STAGE.selection${selection_num} = cmds.ls(selection=True)"
            ]
        },
        "/main_window/manual_tab/selection_panel/grid/selection2": {
            "instance": "/main_window/manual_tab/selection_panel/grid/selection1",
            "attrs": {
                "selection_num": {
                    "value": "2"
                }
            }
        },
        "/main_window/manual_tab/selection_panel/grid/selection3": {
            "instance": "/main_window/manual_tab/selection_panel/grid/selection1",
            "attrs": {
                "selection_num": {
                    "value": "3"
                }
            }
        }
    }
}