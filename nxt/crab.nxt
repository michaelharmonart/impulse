{
    "version": "1.17",
    "alias": "crab",
    "color": "#aa3537",
    "mute": false,
    "solo": false,
    "references": [
        "/users/guest/g/graphite/maya-python/impulse/nxt/cleanup.nxt",
        "/users/guest/g/graphite/maya-python/impulse/nxt/setup.nxt"
    ],
    "comp_overrides": {
        "/users/guest/g/graphite/maya-python/impulse/nxt/base.nxt": {
            "solo": false
        },
        "/users/guest/g/graphite/maya-python/impulse/nxt/cleanup.nxt": {
            "mute": false,
            "solo": false
        },
        "/users/guest/g/graphite/maya-python/impulse/nxt/setup.nxt": {
            "solo": false
        }
    },
    "meta_data": {
        "colors": {
            "/users/guest/g/graphite/maya-python/impulse/nxt/cleanup.nxt": "#2371d0",
            "/users/guest/g/graphite/maya-python/impulse/nxt/setup.nxt": "#49936d"
        },
        "positions": {
            "/Cleanup": [
                955.239112846677,
                -414.72823618234577
            ],
            "/Controls": [
                659.5433881056839,
                -415.4740604063512
            ],
            "/Left": [
                -56.828912077761075,
                -415.8534541726588
            ],
            "/Left/Legs/Back": [
                0.0,
                0.0
            ],
            "/Left/Legs/Front": [
                0.0,
                0.0
            ],
            "/Leg": [
                -415.3155049909202,
                -123.47919027422259
            ],
            "/Leg2": [
                -7.0,
                -461.0
            ],
            "/Legs": [
                66.2052106852218,
                -438.6958204441296
            ],
            "/Right": [
                300.25120217224895,
                -418.2629790260373
            ],
            "/SetupFile": [
                -421.80689444777397,
                -416.04370990194315
            ],
            "/node2": [
                -1746.0,
                -1015.0
            ]
        },
        "collapse": {
            "/Cleanup": false,
            "/Leg2": true,
            "/SetupFile": false,
            "/SetupFile/LoadGuides": false
        }
    },
    "nodes": {
        "/Cleanup": {
            "execute_in": "/Controls"
        },
        "/Controls": {
            "attrs": {
                "ControlGroup": {
                    "type": "str",
                    "value": "\"CTLS\""
                },
                "GuidesGroup": {
                    "type": "raw",
                    "value": "${/SetupFile/LoadGuides.GuidesGroup}"
                },
                "RigGroup": {
                    "type": "raw",
                    "value": "${/SetupFile.RigGroup}"
                }
            },
            "code": [
                "control_group = cmds.group(name=${ControlGroup}, empty=True, parent=${RigGroup})",
                "joints = cmds.listRelatives(${GuidesGroup}, allDescendents=True, type=\"joint\")",
                "joints = reversed(joints)",
                "joint_parents = []",
                "for joint in joints:",
                "    if joint.endswith(\"_END\"):",
                "        continue",
                "    parent = cmds.listRelatives(joint, parent=True)[0]",
                "    if parent == ${GuidesGroup}:",
                "        parent = None",
                "    joint_parents.append((joint, parent))",
                "",
                "control_parent_joints = []",
                "for joint, parent in joint_parents:",
                "    control = impulse.utils.control.generate_control(joint, size=0.2)",
                "    if parent:  ",
                "        control_parent_joints.append((control, parent+\"_CTL\", joint))",
                "    else:",
                "        control_parent_joints.append((control, control_group, joint))",
                "  ",
                "for control, parent, joint in control_parent_joints:",
                "    if parent:",
                "        cmds.parent(control, parent, relative=False)",
                "        impulse.utils.transform.match_transform(control, joint)",
                "    "
            ]
        },
        "/Left": {
            "execute_in": "/SetupFile",
            "child_order": [
                "Legs"
            ],
            "attrs": {
                "Side": {
                    "type": "raw",
                    "value": "L"
                }
            }
        },
        "/Left/Legs": {
            "child_order": [
                "Front",
                "Back"
            ],
            "attrs": {
                "Chain": {
                    "type": "list",
                    "value": "['Section1', 'Section2', 'Section3', 'Section4', 'Section5', 'END']"
                }
            }
        },
        "/Left/Legs/Back": {
            "instance": "/Leg",
            "attrs": {
                "Prefix": {
                    "value": "Back_Leg"
                }
            }
        },
        "/Left/Legs/Front": {
            "instance": "/Leg",
            "attrs": {
                "Prefix": {
                    "value": "Front_Leg"
                }
            }
        },
        "/Leg": {
            "attrs": {
                "IkJoints": {},
                "Name": {
                    "type": "raw",
                    "value": "${Prefix}_${Side}"
                },
                "PoleVector": {
                    "type": "raw",
                    "value": "PoleVector"
                },
                "Prefix": {
                    "type": "raw",
                    "value": "Leg"
                }
            },
            "code": [
                "self.IkJoints = [f\"{self.Prefix}_{self.Side}_{joint}\" for joint in self.Chain]",
                "impulse.utils.ik.ik_from_guides(ik_guides=self.IkJoints, pole_vector_guide=\"${Name}_${PoleVector}\", name=\"${Name}_IK\")"
            ]
        },
        "/Right": {
            "instance": "/Left",
            "execute_in": "/Left",
            "attrs": {
                "Side": {
                    "value": "R"
                }
            }
        },
        "/SetupFile": {
            "start_point": true,
            "child_order": [
                "LoadGeo"
            ],
            "attrs": {
                "Geo": {
                    "type": "raw",
                    "value": "/groups/crabby/Assets/Rigging/Scuttle/Work Files/Scuttle_v009.mb"
                },
                "Guides": {
                    "type": "raw",
                    "value": "/groups/crabby/Assets/Rigging/Scuttle/Work Files/Scuttle_Guides_v009.mb"
                }
            },
            "code": [
                "cmds.file(force=True, newFile=True)",
                "cmds.group(empty=True, name=${RigGroup})"
            ]
        }
    }
}