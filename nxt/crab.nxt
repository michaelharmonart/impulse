{
    "version": "1.17",
    "alias": "crab",
    "color": "#aa3537",
    "mute": false,
    "solo": false,
    "references": [
        "/users/guest/g/graphite/maya-python/impulse/nxt/setup.nxt"
    ],
    "comp_overrides": {
        "/users/guest/g/graphite/maya-python/impulse/nxt/base.nxt": {
            "solo": false
        },
        "/users/guest/g/graphite/maya-python/impulse/nxt/cleanup.nxt": {
            "mute": false,
            "solo": false
        },
        "/users/guest/g/graphite/maya-python/impulse/nxt/setup.nxt": {
            "solo": false
        }
    },
    "meta_data": {
        "colors": {
            "/users/guest/g/graphite/maya-python/impulse/nxt/cleanup.nxt": "#2371d0",
            "/users/guest/g/graphite/maya-python/impulse/nxt/setup.nxt": "#49936d"
        },
        "positions": {
            "/Cleanup": [
                955.239112846677,
                -414.72823618234577
            ],
            "/Controls": [
                659.5433881056839,
                -415.4740604063512
            ],
            "/Left/Legs/Back": [
                0.0,
                0.0
            ],
            "/Left/Legs/Front": [
                0.0,
                0.0
            ],
            "/Leg2": [
                -7.0,
                -461.0
            ],
            "/Legs": [
                66.2052106852218,
                -438.6958204441296
            ],
            "/left": [
                -30.82891207776109,
                -416.85345417265876
            ],
            "/left/legs/front": [
                0.0,
                0.0
            ],
            "/leg": [
                -416.3155049909202,
                -179.47919027422256
            ],
            "/node2": [
                -1746.0,
                -1015.0
            ],
            "/right": [
                324.2512021722489,
                -418.2629790260373
            ],
            "/setup_file": [
                -445.80689444777397,
                -419.0437099019432
            ]
        },
        "collapse": {
            "/Cleanup": true,
            "/Leg2": true,
            "/SetupFile": false,
            "/SetupFile/node": true,
            "/left": false,
            "/left/legs/back": false,
            "/left/legs/front": false,
            "/leg": false,
            "/right": false,
            "/setup_file/LoadGuides": false
        }
    },
    "nodes": {
        "/": {
            "attrs": {
                "asset_root": {
                    "type": "raw",
                    "value": "${path::/groups/crabby/Assets/Rigging/Scuttle/Build}"
                }
            }
        },
        "/left": {
            "execute_in": "/setup_file",
            "child_order": [
                "legs"
            ],
            "attrs": {
                "side": {
                    "type": "raw",
                    "value": "L"
                }
            }
        },
        "/left/legs": {
            "child_order": [
                "front",
                "back"
            ],
            "attrs": {
                "chain": {
                    "type": "list",
                    "value": "['Section1', 'Section2', 'Section3', 'Section4', 'Section5', 'END']"
                }
            }
        },
        "/left/legs/back": {
            "instance": "/leg",
            "attrs": {
                "prefix": {
                    "type": "raw",
                    "value": "Back_Leg_"
                },
                "reverse_segments": {
                    "type": "int",
                    "value": "3"
                }
            }
        },
        "/left/legs/front": {
            "instance": "/leg",
            "attrs": {
                "prefix": {
                    "type": "raw",
                    "value": "Front_Leg_"
                },
                "reverse_segments": {
                    "type": "int",
                    "value": "3"
                }
            }
        },
        "/leg": {
            "attrs": {
                "fk_joints": {},
                "ik_joints": {},
                "ik_switch": {},
                "joints": {},
                "name": {
                    "type": "raw",
                    "value": "${prefix}${side}"
                },
                "pole_vector": {
                    "type": "raw",
                    "value": "PoleVector"
                },
                "pose_joints": {},
                "prefix": {
                    "type": "raw",
                    "value": "Leg_"
                },
                "reverse_segments": {
                    "type": "int",
                    "value": "0"
                },
                "side": {
                    "type": "raw",
                    "value": "L"
                }
            },
            "code": [
                "cmds.group(empty=True, name=\"${name}\", parent=\"${mch_group}\")",
                "control_panel: str = cmds.createNode(\"network\", name=\"${name}_ControlPanel\")",
                "cmds.addAttr(",
                "            control_panel,",
                "            longName=f\"IkFkSwitch\", ",
                "            niceName=f\"IK FK Switch\", ",
                "            minValue=0,",
                "            maxValue=1,",
                "            attributeType=\"float\",",
                "            )",
                "            ",
                "self.ik_switch = f\"{control_panel}.IkFkSwitch\"",
                "self.joints = [f\"${prefix}${side}_{joint}\" for joint in self.chain]",
                "",
                "solve_joints = impulse.utils.ik.ik_from_guides(",
                "    guides=self.joints, pole_vector_guide=\"${name}_${pole_vector}\", ",
                "    name=\"${name}_IK\", parent=\"${name}\", reverse_segments=${reverse_segments}",
                ")",
                "if ${reverse_segments}:",
                "    ik_joints = impulse.utils.ik.fk_from_guides(guides=self.joints, name=\"${name}_IkChain\", parent=\"${name}\", suffix=\"_IkChain\")",
                "    impulse.utils.transform.constrain_transforms(solve_joints, ik_joints)",
                "    self.ik_joints = ik_joints",
                "else:",
                "    self.ik_joints = solve_joints",
                "    ",
                "self.fk_joints = impulse.utils.ik.fk_from_guides(guides=self.joints, name=\"${name}_FK\", parent=\"${name}\")",
                "self.pose_joints = impulse.utils.ik.fk_from_guides(guides=self.joints, name=\"${name}_POSE\", parent=\"${name}\", suffix=\"_POSE\")",
                "",
                "impulse.utils.ik.ik_fk_blend_list(self.ik_joints, self.fk_joints, self.pose_joints, self.ik_switch)"
            ]
        },
        "/right": {
            "instance": "/left",
            "execute_in": "/left",
            "attrs": {
                "side": {
                    "value": "R"
                }
            }
        },
        "/setup_file": {
            "start_point": true,
            "attrs": {
                "asset_root": {
                    "value": "/groups/crabby/Assets/Rigging/Scuttle/Build"
                }
            }
        }
    }
}